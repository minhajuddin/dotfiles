#!/usr/bin/env ruby
#Author: Khaja Minhajuddin
#Date: 2012 Dec 24
#Script to run a ci build on the local computer after a commit is made
exit

require 'securerandom'
require 'fileutils'

CommitHash = ARGV.shift
Repodir    = ARGV.shift
Buildid    = SecureRandom.hex
DbConfig   = "config/database.yml"
Tmpdir     = File.join('/tmp', Buildid)

FileUtils.mkdir(Tmpdir)

puts "started build for repo:#{Repodir} commit:#{CommitHash} buildid:#{Buildid}"
#helper functions
def run(arg)
  puts "RUNNING #{arg}"
  system("#{arg} 2>&1")
end

def untag(tag)
  Dir.chdir Repodir
  run("git tag -d '#{tag}'")
  Dir.chdir Tmpdir
end
def tag(tag, msg)
  Dir.chdir Repodir
  run("git tag -a '#{tag}' -m '#{msg}'")
  Dir.chdir Tmpdir
end
#checkout a shallow version in a tmp directory
tag "processing-#{Buildid}", "Running tests for build"
run("git clone #{Repodir} #{Tmpdir}")
#cd to this directory
Dir.chdir(Tmpdir)
#trust rvmrc
run("rvm rvmrc trust #{Tmpdir}")
#checkout the right commit
run("git checkout #{CommitHash} -b #{Buildid}")
run("bundle install --binstubs")
#tweak database.yml
File.write(DbConfig, File.readlines(DbConfig).map {|x| x =~ /database:/ ? x.gsub('test', "test_#{Buildid}") :x }.join)
#migrate db
run("RAILS_ENV=test bin/rake db:create db:migrate")
#run specs
puts "Running tests"
if run("RAILS_ENV=test bin/rspec spec")
  system("notify-send --urgency=low -i '/home/minhajuddin/.icons/ruby_green_icon.png' 'Tests passed for the commit - #{CommitHash}'")
else
  #tag the commit as a failure
  tag "failed-#{Buildid}" , "Failed build"
  system("notify-send --urgency=low -i 'error' 'Tests failed for - #{CommitHash}'")
end
untag "processing-#{Buildid}"
#drop database
run("RAILS_ENV=test bin/rake db:drop")
#add a pass fail tag to the original repo
puts "Finished build for repo:#{Repodir} commit:#{CommitHash} buildid:#{Buildid}"
